"use strict";var appendPrefixPreventingSubstitutionByGruntReplaceAndUglify=function(e){return"@@"+e},variableNameThatShouldNotBeReplaced=appendPrefixPreventingSubstitutionByGruntReplaceAndUglify("___ENV_REPLACE_WORKAROUND___"),replaceTaskInvoked="42"!==variableNameThatShouldNotBeReplaced,copyArray=function(e){return(e||[]).slice(0)};angular.module("amvSystemDemoUi",["ngAnimate","ngCookies","ngMessages","ngSanitize","ngTouch","ui.router","ui-leaflet","knalli.angular-vertxbus","js-data"]).factory("Materialize",["$window",function(e){return e.Materialize}]).factory("jQuery",["$window",function(e){return e.jQuery}]).factory("lodash",["$window",function(e){return e._}]).factory("amvTrafficsoftRestJs",["$window",function(e){return e.amvTrafficsoftRestJs}]).factory("DSLocalForageAdapter",["$window",function(e){return e.DSLocalForageAdapter}]).run(["DS","DSLocalForageAdapter",function(e,t){var a=new t;e.registerAdapter("localForage",a,{default:!0})}]).factory("SettingsResource",["DS",function(e){return e.defineResource("SettingsResource")}]).factory("amvApplicationInfo",[function(){return replaceTaskInvoked?{version:"app"}:{version:"dev"}}]).factory("amvGitInfo",function(){return replaceTaskInvoked?{local:{branch:{shortSHA:"755063f",name:"client-v0.3.0",lastCommitNumber:"41"}},remote:{origin:{url:"https://amvnetworks@github.com/amv-networks/amv-system-demo-app.git"}}}:{local:{branch:{shortSHA:"${shortSHA}",name:"${branchName}",lastCommitNumber:"${lastCommitNumber}"}},remote:{origin:{url:"${remoteUrl}"}}}}).factory("amvSystemDemoUiSettingsTemplate",function(){return{api:{baseUrl:"https://www.example.com",options:{contractId:1,auth:{username:"demo",password:"demo-password"}}},app:{vehicleIds:[]},enableDemoMode:!0,enableStreamingUpdates:!1,enablePeriodicUpdateInterval:!0,periodicUpdateIntervalInSeconds:60,debug:!1}}).factory("amvSystemDemoUiSettings",["$log","lodash","SettingsResource","amvSystemDemoUiSettingsTemplate",function(e,t,a,i){return{get:function(){return a.findAll().then(function(e){if(1!==e.length)throw new Error("Cannot find settings.");var a=t.defaults({},e[0]);return t.defaults(a,i)}).catch(function(t){return e.debug("Continue with default settings: ",t.message),i})}}}]).factory("amvTrafficsoftApiSettings",["amvTrafficsoftRestJs","amvSystemDemoUiSettings",function(e,t){return{get:function(){return t.get().then(function(e){return e.api})}}}]).factory("authContractId",["amvTrafficsoftRestJs","amvSystemDemoUiSettings",function(e,t){return{get:function(){return t.get().then(function(e){return e.api.options.contractId})}}}]).factory("amvClientFactory",["amvTrafficsoftRestJs","amvTrafficsoftApiSettings",function(e,t){return{get:function(){return t.get().then(function(t){return e(t.baseUrl,t.options)})}}}]).factory("amvXfcdClient",["amvClientFactory",function(e){return{get:function(){return e.get().then(function(e){return e.xfcd()})}}}]).factory("amvContractClient",["amvClientFactory",function(e){return{get:function(){return e.get().then(function(e){return e.contract()})}}}]).factory("amvVehicleIds",["$log","amvSystemDemoUiSettings","amvContractClient","authContractId","amvDemoVehicle",function(e,t,a,i,n){return{get:function(){return t.get().then(function(e){return e.app}).then(function(e){return e.vehicleIds}).then(function(t){var o=t.length>0,l=copyArray(t);return a.get().then(function(e){return i.get().then(function(t){return e.fetchSubscriptions(t)})}).then(function(e){return e.data.subscriptions}).catch(function(t){return e.warn("Error while fetching subscriptions.. continuing with demo subscriptions: "+t.message),[{vehicleId:n.id,from:"1970-01-01T12:00:00+01:00"}]}).then(function(e){return(e||[]).map(function(e){return e.vehicleId})}).then(function(e){return o?(l.push(n.id),e.filter(function(e){return l.indexOf(e)>=0})):e}).then(function(e){return e.slice(0,10)})})}}}]).factory("amvDemoVehicle",[function(){var e=Math.random()>=.3,t=Math.round(2+59*Math.random()),a=Math.round(10*(e?100*Math.random():0))/10;return{id:1,name:"Demo Vehicle",location:{lat:Math.round(1e6*(49.301369+Math.random()/100))/1e6,lng:Math.round(1e6*(8.638769+Math.random()/100))/1e6},provider:"amv networks",requestTime:Date.now(),date:Date.now(),data:{timestamp:Date.now(),speed:a,states:[{param:"vbat",value:12.3},{param:"move",value:e?1:0}],xfcds:[{param:"kmrd",value:1337},{param:"atmp",value:Math.round(40*Math.random()*10-5)/10},{param:"fcon",value:Math.round(15*Math.random()*10)/10},{param:"hbrk",value:e?0:Math.random()>.5?1:0},{param:"wrlt",value:Math.random()>.1?1:0},{param:"flev",value:Math.round(2+59*Math.random())},{param:"chrp",value:e?0:Math.random()>.5?1:0},{param:"range",value:15*t},{param:"appe",value:Math.min(100,Math.round(Math.random()*a))}]}}}]).config(["vertxEventBusProvider",function(e){e.enable().useReconnect().useUrlServer("http://geolocation.amv-networks.com").useUrlPath("/eventbus")}]).config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/home"),e.state("home",{url:"/home",templateUrl:"views/page/main.html",controller:"MainCtrl",controllerAs:"main"}).state("settings",{url:"/settings",templateUrl:"views/page/settings.html",controller:"SettingsCtrl",controllerAs:"settings"}).state("canparams",{url:"/can-params",templateUrl:"views/page/can-params.html",controller:"CanParamsCtrl",controllerAs:"canParams"}).state("stateparams",{url:"/state-params",templateUrl:"views/page/state-params.html",controller:"StateParamsCtrl",controllerAs:"stateParams"}).state("vehicle",{url:"/vehicle-detail/:id",templateUrl:"views/page/vehicle-detail.html",controller:"VehicleDetailCtrl",controllerAs:"vehicleDetail",resolve:{amvVehicleId:["$stateParams",function(e){return parseInt(e.id)}]}}).state("about",{url:"/about",templateUrl:"views/page/about.html",controller:"AboutCtrl",controllerAs:"about"})}]).run(["$timeout","$rootScope","Materialize",function(e,t,a){t.$on("$viewContentLoaded",function(){e(function(){a.updateTextFields()},100)})}]).run(["$timeout","Materialize","amvSystemDemoUiSettings",function(e,t,a){t.toast("Welcome to the amv System Demo Application.",2e3),a.get().then(function(a){var i=[],n=a.api.options.contractId,o=a.api.options.auth.username;i.push(["Using user '"+o+"' and contract #"+n,5e3]),a.app.vehicleIds.length>0&&i.push(["Vehicle filtering is enabled. ",2e3]),a.enableDemoMode&&i.push(["Demonstration mode is enabled. ",2e3]),a.enableStreamingUpdates&&t.toast("Streaming data is enabled. ",2e3);var l=2500;i.forEach(function(a){e(function(){var e=a[0],i=a[1];t.toast(e,i)},l),l+=1e3})})}]).controller("TopNavigationController",["amvGitInfo",function(e){this.gitinfo=angular.copy(e)}]),angular.module("amvSystemDemoUi").directive("initSidenavToggleButton",["jQuery",function(e){return{controller:[function(){e(".button-collapse").sideNav()}]}}]).directive("amvVehicleDetail",["amvCanParams","amvStateParams",function(e,t){return{transclude:!0,scope:{vehicle:"&vehicle"},controllerAs:"ctrl",controller:["$scope",function(a){var i=this,n=a.vehicle();i.model={},i.model.vehicle=n,i.model.requestTime=moment(n.requestTime),i.model.requestTimeFromNow=moment(n.requestTime).fromNow(),i.model.positionTime=moment(n.data.timestamp),i.model.positionTimeFromNow=moment(n.data.timestamp).fromNow(),e.get().then(function(e){i.canParamsMap=_.keyBy(e,"code")}),t.get().then(function(e){i.stateParamsMap=_.keyBy(e,"code")}),this.map={center:{lat:i.model.vehicle.location.lat,lng:i.model.vehicle.location.lng,zoom:12},markers:[],events:{},defaults:{scrollWheelZoom:!0,center:{lat:49,lng:10,zoom:5}},tiles:{url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"},controls:{fullscreen:{position:"topleft"}}},a.$watch(function(){return i.map.center.zoom},function(e){i.map.tiles.url=e>6?"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png":"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"});function o(e){return!!e&&!!e.location&&e.location.lat&&e.location.lng}var l,s,r;i.map.markers=[],function(e){var t;if(o(e)){var a={lat:(t=e).location.lat,lng:t.location.lng,draggable:!1,icon:{iconSize:[48,48],iconAnchor:[24,24],popupAnchor:[0,0]}};i.map.markers.push(a)}}(i.model.vehicle),l=i.model.vehicle,r=(s=17)>0?s:11,o(l)&&(i.map.center={lat:l.location.lat,lng:l.location.lng,zoom:r})}],templateUrl:"views/directives/amv-vehicle-detail.html"}}]).directive("materializeModal",[function(){return{transclude:!0,scope:{id:"@id",headerText:"@headerText"},templateUrl:"views/directives/materialize-modal.html"}}]).directive("materializeModalActivator",["$window","$compile","$timeout",function(e,t,a){var i=e.$;return{scope:{dismissible:"=",opacity:"@",inDuration:"@",outDuration:"@",startingTop:"@",endingTop:"@",ready:"&?",complete:"&?",open:"=?",enableTabs:"@?"},link:function(e,n,o){a(function(){var a=i(o.href?o.href:"#"+o.target);t(n.contents())(e);var l={dismissible:angular.isDefined(e.dismissible)?e.dismissible:void 0,opacity:angular.isDefined(e.opacity)?e.opacity:void 0,inDuration:angular.isDefined(e.inDuration)?e.inDuration:void 0,outDuration:angular.isDefined(e.outDuration)?e.outDuration:void 0,startingTop:angular.isDefined(e.startingTop)?e.startingTop:void 0,endingTop:angular.isDefined(e.endingTop)?e.endingTop:void 0,ready:function(){angular.isFunction(e.ready)&&e.$apply(e.ready),e.open=!0,e.$apply(),e.enableTabs&&a.find("ul.tabs").tabs()},complete:function(){angular.isFunction(e.complete)&&e.$apply(e.complete),e.open=!1,e.$apply()}};a.modal(l),n.modal(l),angular.isDefined(o.open)&&a.length>0&&e.$watch("open",function(e){angular.isDefined(e)&&(!0===e?a.modal("open"):a.modal("close"))})})}}}]).directive("materializeTooltippedDisabled",["$compile","$timeout",function(e,t){return{restrict:"A",link:function(a,i,n){var o=Function.prototype;function l(){i.addClass("tooltipped"),e(i.contents())(a),t(function(){i.attr("data-tooltip-id")&&i.tooltip("remove"),i.tooltip()}),o=a.$on("$destroy",function(){i.tooltip("remove")})}n.$observe("tooltipped",function(e){"false"===e&&o!==Function.prototype?(i.tooltip("remove"),o(),o=Function.prototype):"false"!==e&&o===Function.prototype&&l()}),"false"!==n.tooltipped&&l(),i.on("$destroy",function(){i.tooltip("remove")}),a.$watch(function(){return i.attr("data-tooltip")},function(e,a){e!==a&&"false"!==n.tooltippify&&t(function(){i.tooltip()})})}}}]),angular.module("amvSystemDemoUi").controller("MainCtrl",["$scope","$log","$timeout","Materialize","amvSystemDemoUiSettings","amvXfcdClient","amvVehicleIds","amvDemoVehicle",function(e,t,a,i,n,o,l,s){var r=this;this.map={center:{lat:49,lng:10,zoom:3},markers:[],events:{},defaults:{scrollWheelZoom:!0,center:{lat:49,lng:10,zoom:5}},tiles:{url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"},controls:{fullscreen:{position:"topleft"}}},e.$watch(function(){return r.map.center.zoom},function(e){r.map.tiles.url=e>6?"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png":"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"});function c(e){return!!e&&!!e.location&&e.location.lat&&e.location.lng}var d=function(e){var t,a,i,n;if(c(e)){var o=(t=e,a=moment(t.requestTime).format(),i=moment(t.data.timestamp).fromNow(),n="<div><h6>"+t.name+'</h6><small><i class="material-icons tiny">room</i> lat/lng: '+t.location.lat+" / "+t.location.lng+'</small><br /><small> <i class="material-icons tiny">av_timer</i> speed: '+(t.data.speed||0)+' km/h</small><br /><span></span><br /><small><i class="material-icons tiny">router</i> Data Provider: '+t.provider+'</small><br /><small><i class="material-icons tiny">query_builder</i> Request Time: '+a+'</small><br /><small><i class="material-icons tiny">query_builder</i> Position Time: '+i+"</small></div>",{lat:t.location.lat,lng:t.location.lng,message:n,draggable:!1,icon:{iconSize:[48,48],iconAnchor:[24,24],popupAnchor:[0,0]}});r.map.markers.push(o)}};e.$on("leafletDirectiveMap.mymap.click",function(e,a){var i=a.leafletEvent,n={location:{lat:i.latlng.lat,lng:i.latlng.lng}};t.log("clicked "+n)}),e.zoomToLocation=function(e,t){var a=t>0?t:11;c(e)?(i.toast("Zoom to "+e.name,1e3),r.map.center={lat:e.location.lat,lng:e.location.lng,zoom:a}):i.toast("No location data available for "+e.name,2e3)},function(){r.loading=!0,r.vehicles=[],r.periodicUpdateTimeoutPromise=null,e.$on("$destroy",function(){a.cancel(r.periodicUpdateTimeoutPromise)});var c=function(e){r.vehicles.push(e),d(e)},m=function(e,a){return(i=e,r.loading=!0,o.get().then(function(e){return e.getLastData(i)}).then(function(e){return t.log("ok, got data"),e.data&&e.data.length>0?e.data:[]}).finally(function(){r.loading=!1})).then(function(e){return e&&e.length>0&&a(e),e});var i},u=function(){c(s)};l.get().then(function(e){n.get().catch(function(e){r.loading=!1,u(),t.log(e)}).then(function(n){r.settings=n;var o=1e3*(n.periodicUpdateIntervalInSeconds||10),l=function(e){r.map.markers=[],r.vehicles=[],n.enableDemoMode&&u(),e.forEach(function(e){var t,a={id:(t=e).id,name:t.name||t.id,location:{lat:t.latitude,lng:t.longitude},provider:"amv networks",requestTime:Date.now(),date:Date.now(),data:t};c(a)})};(n.enablePeriodicUpdateInterval?function(){return function e(t,i,n){var o=Math.max(n,5e3);return m(t,i).then(function(n){return r.periodicUpdateTimeoutPromise=a(function(){e(t,i,o)},o),n})}(e,l,o)}:function(){return m(e,l)})().then(function(e){0===e.length?i.toast("Response contains empty data!",2e3):i.toast("Finished loading "+e.length+" location(s)",1e3)}).catch(function(e){if(n.enableDemoMode)u();else{t.log("error, while getting data"),t.log(e);var a=e&&e.response&&e.response.data&&e.response.data.message?e.response.data.message:e;i.toast(a,4e3),i.toast("Please check your settings.",5e3)}})})})}()}]),angular.module("amvSystemDemoUi").controller("SettingsCtrl",["Materialize","SettingsResource","amvSystemDemoUiSettingsTemplate",function(e,t,a){var i=this,n=a;t.findAll().then(function(e){0!==e.length?i.config=angular.copy(e[0]):t.create(n).then(function(e){i.config=angular.copy(e)})}),this.saveSettings=function(a){t.destroyAll().then(function(){t.create(a).then(function(t){i.config=angular.copy(t),e.toast("Settings saved!",3e3)})})},this.loadDefaultSettings=function(){i.config=angular.copy(n)},this.addValueToVehicleIds=function(e){e&&e>0&&i.config.app.vehicleIds.push(e)},this.onKeyUpOnNewVehicleIdInput=function(e,t){13===e.keyCode&&i.addValueToVehicleIds(t)},this.removeVehicleIdWithValue=function(e){var t=i.config.app.vehicleIds.indexOf(e);t>=0&&i.config.app.vehicleIds.splice(t,1)}}]),angular.module("amvSystemDemoUi").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("amvSystemDemoUi").controller("VehicleDetailCtrl",["$scope","$log","$timeout","Materialize","amvSystemDemoUiSettings","amvXfcdClient","amvDemoVehicle","amvVehicleId",function(e,t,a,i,n,o,l,s){var r=this;if(!s)return i.toast("`vehicleId` is invalid. Cannot show details.",2e3),void(r.error={message:"`vehicleId` is invalid. Cannot show details."});!function(){r.loading=!0,r.vehicles=[],r.periodicUpdateTimeoutPromise=null,e.$on("$destroy",function(){a.cancel(r.periodicUpdateTimeoutPromise)});var c=function(e,a){return(i=e,r.loading=!0,o.get().then(function(e){return e.getLastData(i)}).then(function(e){return t.log("ok, got data"),e.data&&e.data.length>0?e.data:[]}).finally(function(){r.loading=!1})).then(function(e){return e&&e.length>0&&a(e),e});var i};r.demoMode=s===l.id,n.get().catch(function(e){r.loading=!1,r.demoMode?r.vehicles=[l]:(t.log(e),i.toast("Please check your settings.",3e3))}).then(function(e){var n=[s],o=1e3*(e.periodicUpdateIntervalInSeconds||60),d=function(e){r.vehicles=[],e.forEach(function(e){var t,a={id:(t=e).id,name:t.name||t.id,location:{lat:t.latitude,lng:t.longitude},provider:"amv networks",requestTime:Date.now(),date:Date.now(),data:t};r.vehicles.push(a)})};(e.enablePeriodicUpdateInterval?function(){return function e(t,i,n){var o=Math.max(n,5e3);return c(t,i).then(function(n){return r.periodicUpdateTimeoutPromise=a(function(){e(t,i,o)},o),n})}(n,d,o)}:function(){return c(n,d)})().then(function(e){0===e.length?i.toast("Response contains empty data!",2e3):i.toast("Finished loading "+e.length+" position(s)",1e3)}).catch(function(e){if(r.demoMode)r.vehicles=[l];else{t.log("error, while getting data"),t.log(e);var a=e&&e.response&&e.response.data&&e.response.data.message?e.response.data.message:"Error while trying to receive data.";i.toast(a,4e3),i.toast("Please check your settings.",5e3);var n=e&&e.config&&e.config.url;r.error={url:n,message:a}}})})}()}]),angular.module("amvSystemDemoUi").controller("CanParamsCtrl",["$log","$timeout","Materialize","amvCanParams",function(e,t,a,i){var n=this;n.loading=!0,i.get().then(function(e){n.canParams=e}).catch(function(e){var t=e.message||"";n.error="Error while loading can params. "+t}).finally(function(){n.loading=!1})}]),angular.module("amvSystemDemoUi").controller("StateParamsCtrl",["$log","$timeout","Materialize","amvStateParams",function(e,t,a,i){var n=this;n.loading=!0,i.get().then(function(e){n.stateParams=e}).catch(function(e){var t=e.message||"";n.error="Error while loading state params. "+t}).finally(function(){n.loading=!1})}]),angular.module("amvSystemDemoUi").factory("amvCanParams",["$q","$log","amvContractClient","authContractId",function(e,t,a,i){return{get:function(){return a.get().then(function(e){return i.get().then(function(t){return e.fetchDataPackage(t)})}).then(function(e){return t.log("ok, got data"),e.data}).then(function(e){return e.params.xfcds})}}}]),angular.module("amvSystemDemoUi").factory("amvStateParams",["$q","$log","amvContractClient","authContractId",function(e,t,a,i){return{get:function(){return a.get().then(function(e){return i.get().then(function(t){return e.fetchDataPackage(t)})}).then(function(e){return t.log("ok, got data"),e.data}).then(function(e){return e.params.states})}}}]),angular.module("amvSystemDemoUi").run(["$templateCache",function(e){e.put("views/directives/amv-vehicle-detail.html",'<div> <div class="col s12 m12 l6"> <div class="row"> <div class="col s12 m12 l12"> <h3>{{ ctrl.model.vehicle.name }}</h3> <i class="material-icons tiny">query_builder</i> request time: {{ ctrl.model.requestTimeFromNow }} <small>({{ ctrl.model.requestTime }})</small> <br> <i class="material-icons tiny">router</i> data provider: {{ ctrl.model.vehicle.provider }} <br> <br> <i class="material-icons tiny">room</i> lat/lng: {{ctrl.model.vehicle.location.lat}} / {{ ctrl.model.vehicle.location.lng }} <br> <i class="material-icons tiny">query_builder</i> position time: {{ ctrl.model.positionTimeFromNow }} <small>({{ ctrl.model.positionTime }})</small> <br> <i class="material-icons tiny">av_timer</i> speed: {{ (ctrl.model.vehicle.data.speed || 0) }} km/h </div> </div> </div> <div class="col s12 m12 l6" style="padding: 9px"> <leaflet id="mymap" defaults="ctrl.map.defaults" center="ctrl.map.center" markers="ctrl.map.markers" tiles="ctrl.map.tiles" height="250px"> </leaflet> </div> <div class="col s12 m12 l12"> <h5>STATE params</h5> <div class="card-panel amber lighten-5" data-ng-if="ctrl.model.vehicle.data.states.length <= 0"> No states params present. </div> <table data-ng-if="ctrl.model.vehicle.data.states.length > 0"> <thead> <tr> <th>param</th> <th>value</th> </tr> </thead> <tbody> <tr data-ng-repeat="state in ctrl.model.vehicle.data.states"> <td> <span data-materialize-tooltipped data-delay="50" data-tooltip="{{ ctrl.stateParamsMap[state.code].description || \'No info.\' }}"> {{ state.param }} </span> </td> <td> <span>{{ state.value }}</span> </td> </tr> </tbody> </table> </div> <div class="col s12 m12 l12"> <h5>XFCD params</h5> <div class="card-panel amber lighten-5" data-ng-if="ctrl.model.vehicle.data.xfcds.length <= 0"> No xfcd params present. </div> <table data-ng-if="ctrl.model.vehicle.data.xfcds.length > 0"> <thead> <tr> <th>param</th> <th>value</th> </tr> </thead> <tbody> <tr data-ng-repeat="xfcd in ctrl.model.vehicle.data.xfcds"> <td> <span> {{ xfcd.param }} </span> </td> <td> <span>{{ xfcd.value }}</span> </td> </tr> </tbody> </table> </div> </div> '),e.put("views/directives/materialize-modal.html",'<div id="{{ id }}" class="modal bottom-sheet"> <div class="modal-content"> <h4>{{ headerText }}</h4> <div data-ng-transclude></div> </div> <div class="modal-footer"> <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Agree</a> </div> </div> '),e.put("views/page/about.html",'<div class="container"> <div class="section"> <div class="row"> <div class="col s12 m12"> <h3>About</h3> <p>The AMV System Demo is a work-in-progress proof-of-concept prototype application.</p> <h4>Primary Goals</h4> <ul class="browser-default"> <li>Create a system that displays mobility data as it flows through in real-time</li> <li>Give insights for people keeping track of a fleet of moving objects</li> <li>Finding possible improvements and help in understanding the usage and impacts of mobility services within a certain domain </li> <li>Provide a small preview of the data available on the AMV Platform</li> </ul> <h4>Prototype Stage</h4> <p> This application is currently in a prototype stage. Be prepared to see some rough edges or under-construction features. During the ongoing development you may experience technical misbehaviour or small bugs here and there. You may also feel like some key features are missing - because they are. Feel free to suggest a feature you want to see in the near future - just open a <a href="https://github.com/amv-networks/amv-system-demo-app/issues">feature request on GitHub</a>. </p> <h4>License</h4> The project is licensed under the <a href="https://raw.githubusercontent.com/amvnetworks/amv-trafficsoft-rest/master/LICENSE">Apache License, Version 2.0</a>. <h5>Redistribution</h5> <p> You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the conditions of the license.</p> <p> You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.</p> <h5>Trademarks</h5> <p>This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.</p> <h5>Disclaimer of Warranty</h5> <p> Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p> </div> </div> </div> </div>'),e.put("views/page/can-params.html",'<div class="progress amber" style="margin: 0" data-ng-show="canParams.loading"> <div class="indeterminate amber lighten-4"></div> </div> <div class="row" style="margin-bottom: 0"> <div class="container"> <div data-ng-if="canParams.error"> <h2>There has been an error :(</h2> <p>{{ canParams.error.message }}</p> <p data-ng-if="canParams.error.exception">{{ canParams.error.exception }}</p> <pre>{{ canParams.error | json}}</pre> </div> <h1>CAN Parameter</h1> <form class=""> <div class="input-field col s12"> <input placeholder="" id="filterInput" type="text" data-ng-model="filterInput"> <label for="filterInput">Filter</label> </div> </form> <table> <thead> <tr> <th>code</th> <th>name</th> <th>description</th> </tr> </thead> <tbody> <tr data-ng-repeat="canParam in canParams.canParams | filter:filterInput"> <td> <pre>{{ canParam.code }}</pre> </td> <td>{{ canParam.name }}</td> <td>{{ canParam.description }}</td> </tr> </tbody> </table> </div> </div> '),e.put("views/page/main.html",'<div class="progress amber" style="margin: 0" data-ng-show="main.loading"> <div class="indeterminate amber lighten-4"></div> </div> <div class="row" style="margin-bottom: 0"> <div class="col s6 m4 l3" style="padding: 0"> <div style="height: 600px; overflow-y: scroll; overflow-x: hidden"> <form class=""> <div class="input-field col s12"> <input placeholder="" id="filterInput" type="text" data-ng-model="filterInput"> <label for="filterInput">Filter</label> </div> </form> <div class="collection"> <div class="collection-item" data-ng-repeat="vehicle in main.vehicles | filter:filterInput"> <span class="badge">{{$index + 1}}</span> <header> <h5>{{ vehicle.name }}</h5> </header> <div class="left"> <ul style="margin: 0"> <li> <i class="material-icons tiny">room</i> <small data-ng-show="vehicle.location.lat && vehicle.location.lng"> lat/lng: {{ vehicle.location.lat }} / {{ vehicle.location.lng }} </small> <small data-ng-hide="vehicle.location.lat && vehicle.location.lng"> lat/lng: No location data available. </small> </li> <li> <i class="material-icons tiny">av_timer</i> <small> speed: {{ vehicle.data.speed || 0 }} km/h </small> </li> </ul> </div> <div class="right"> <a class="btn-floating waves-effect waves-light amber" data-ng-click="zoomToLocation(vehicle, 17)" data-materialize-tooltipped data-delay="50" data-tooltip="zoom to location"> <i class="material-icons">my_location</i> </a> <a class="btn-floating waves-effect waves-light amber" data-ui-sref="vehicle({id: vehicle.id})" data-materialize-tooltipped data-delay="50" data-tooltip="view additional information"> <i class="material-icons">perm_device_information</i> </a> </div> <div style="float:none; clear:both"></div> <div data-ng-if="main.settings.debug"> {{ vehicle.data | json }} </div> </div> </div> </div> </div> <div class="col s6 m8 l9" style="padding: 0"> <leaflet id="mymap" defaults="main.map.defaults" center="main.map.center" markers="main.map.markers" tiles="main.map.tiles" height="600px"> </leaflet> </div> </div> '),e.put("views/page/settings.html",'<div class="container"> <div class="section"> <div class="row"> <div class="col s12 m12"> <h2 class="header light"> Settings <a class="waves-effect waves-light btn-large amber right" data-ng-click="settings.saveSettings(settings.config)"> <i class="material-icons left">done</i> Save </a> </h2> <div class="col s12"> <h3 class="header light">API Settings</h3> <ul class="collection"> <li class="collection-item"> <div class="input-field"> <input id="baseUrl" type="text" class="validate" data-ng-model="settings.config.api.baseUrl"> <label class="active" for="baseUrl">Base URL</label> </div> <div class="row" style="margin-bottom: 0"> <div class="input-field col s6"> <input id="username" type="text" class="validate" data-ng-model="settings.config.api.options.auth.username"> <label class="active" for="username">Username</label> </div> <div class="input-field col s6"> <input id="password" type="password" class="validate" data-ng-model="settings.config.api.options.auth.password"> <label class="active" for="password">Password</label> </div> </div> <div class="input-field"> <input id="contractId" type="number" class="validate" data-ng-model="settings.config.api.options.contractId"> <label class="active" for="contractId">ContractId</label> </div> </li> </ul> <h3 class="header light">Application Settings</h3> <ul class="collection"> <li class="collection-item"> <h6>Vehicle Ids</h6> <p data-ng-if="settings.config.app.vehicleIds.length != 0"> Filtering is <strong class="green-text">enabled</strong>: Incoming data is filtered by given vehicle ids. </p> <p data-ng-if="settings.config.app.vehicleIds.length == 0"> Filtering is <strong class="grey-text">disabled</strong>: All vehicles with valid subscriptions are shown (the current settings allow up to 10 vehicles)! </p> <div> <div class="chip" data-ng-repeat="vehicleId in settings.config.app.vehicleIds track by $index"> {{ vehicleId }} <i class="material-icons" data-ng-click="settings.removeVehicleIdWithValue(vehicleId)" style="cursor: pointer">close</i> </div> </div> <div class="file-field input-field"> <div class="waves-effect waves-light btn right" data-ng-click="settings.addValueToVehicleIds(__newVehicleId); __newVehicleId = null;"> Add </div> <div class="file-path-wrapper"> <input id="newVehicleId" type="number" class="validate" data-ng-model="__newVehicleId" data-ng-keyup="settings.onKeyUpOnNewVehicleIdInput($event, __newVehicleId)"> \x3c!--label class="active" for="newVehicleId">Add VehicleId</label--\x3e </div> </div> </li> <li class="collection-item" style="cursor: pointer" data-ng-class="{ \'grey lighten-3\' : settings.optOut }" data-ng-click="settings.config.enableDemoMode = !settings.config.enableDemoMode"> <span class="title">Enable demonstration mode</span> <div class="switch right"> <label> Off <input type="checkbox" data-ng-model="settings.config.enableDemoMode" data-ng-true-value="true" data-ng-false-value="false" data-ng-change-disabled="settings.doOnStateChange()"> <span class="lever"></span> On </label> </div> <p data-ng-if="settings.config.enableDemoMode"> Demonstration mode is <strong class="green-text">enabled</strong>! A few demonstrative elements will be displayed to show the key features of the application. </p> <p data-ng-if="!settings.config.enableDemoMode"> Demonstration mode is <strong class="grey-text">disabled</strong>! </p> </li> <li class="collection-item" style="cursor: pointer" data-ng-class="{ \'grey lighten-3\' : settings.optOut }" data-ng-click="settings.config.enableStreamingUpdates = !settings.config.enableStreamingUpdates"> <span class="title">Realtime position updates</span> <div class="switch right"> <label> Off <input type="checkbox" data-ng-model="settings.config.enableStreamingUpdates" data-ng-true-value="true" data-ng-false-value="false" data-ng-change-disabled="settings.doOnStateChange()"> <span class="lever"></span> On </label> </div> <p data-ng-if="settings.config.enableStreamingUpdates"> Realtime geolocation information updates are <strong class="green-text">enabled</strong>! Data will stream into the application in near real-time. Use wisely as this may generate a lot of data traffic. This feature is currently not implemented. </p> <p data-ng-if="!settings.config.enableStreamingUpdates"> Realtime geolocation information updates are <strong class="grey-text">disabled</strong>! Data will be updated on the specified update interval. </p> </li> <li class="collection-item" style="cursor: pointer" data-ng-class="{ \'grey lighten-3\' : settings.optOut }" data-ng-click="settings.config.enablePeriodicUpdateInterval = !settings.config.enablePeriodicUpdateInterval"> <span class="title">Enable periodic update interval</span> <div class="switch right"> <label> Off <input type="checkbox" data-ng-model="settings.config.enablePeriodicUpdateInterval" data-ng-true-value="true" data-ng-false-value="false" data-ng-change-disabled="settings.doOnStateChange()"> <span class="lever"></span> On </label> </div> <p data-ng-if="settings.config.enablePeriodicUpdateInterval"> Periodic update interval is <strong class="green-text">enabled</strong>! Information will be updated every {{ settings.config.periodicUpdateIntervalInSeconds }} seconds. </p> <p data-ng-if="!settings.config.enablePeriodicUpdateInterval"> Periodic update interval is <strong class="grey-text">disabled</strong>! Information will be gathered once and will NOT be updated. </p> </li> <li class="collection-item"> <div class="input-field"> <input id="periodicUpdateIntervalInSeconds" type="number" class="validate" min="5" data-ng-model="settings.config.periodicUpdateIntervalInSeconds" data-ng-disabled="!settings.config.enablePeriodicUpdateInterval"> <label class="active" for="periodicUpdateIntervalInSeconds">Periodic Update Interval In Seconds</label> </div> </li> <li class="collection-item" style="cursor: pointer" data-ng-class="{ \'grey lighten-3\' : settings.optOut }" data-ng-click="settings.toggleOptOut()"> <span class="title">Debug Mode</span> <div class="switch right"> <label> Off <input type="checkbox" data-ng-model="settings.config.debug" data-ng-true-value="true" data-ng-false-value="false" data-ng-change-disabled="settings.doOnStateChange()"> <span class="lever"></span> On </label> </div> <p data-ng-if="settings.config.debug"> Debug Mode is <strong class="green-text">enabled</strong>! The application will output and display more fine grained messages. </p> <p data-ng-if="!settings.config.debug"> Debug Mode is <strong class="grey-text">disabled</strong>! The application will NOT output or display detailed messages. </p> </li> </ul> </div> </div> <div class="col s12 m12"> <a class="waves-effect waves-light btn right" data-ng-click="settings.loadDefaultSettings()"> <i class="material-icons left">settings_backup_restore</i> Load default values </a> </div> <div class="col s12 m12"> <p data-ng-if="settings.config.debug"> <code> {{ settings.config | json }} </code> </p> </div> </div> </div> </div> '),e.put("views/page/state-params.html",'<div class="progress amber" style="margin: 0" data-ng-show="stateParams.loading"> <div class="indeterminate amber lighten-4"></div> </div> <div class="row" style="margin-bottom: 0"> <div class="container"> <div data-ng-if="stateParams.error"> <h2>There has been an error :(</h2> <p>{{ stateParams.error.message }}</p> <p data-ng-if="stateParams.error.exception">{{ stateParams.error.exception }}</p> <pre>{{ stateParams.error | json}}</pre> </div> <h1>State Parameter</h1> <form class=""> <div class="input-field col s12"> <input placeholder="" id="filterInput" type="text" data-ng-model="filterInput"> <label for="filterInput">Filter</label> </div> </form> <table> <thead> <tr> <th>code</th> <th>name</th> <th>description</th> </tr> </thead> <tbody> <tr data-ng-repeat="stateParam in stateParams.stateParams | filter:filterInput"> <td> <pre>{{ stateParam.code }}</pre> </td> <td>{{ stateParam.name }}</td> <td>{{ stateParam.description }}</td> </tr> </tbody> </table> </div> </div> '),e.put("views/page/vehicle-detail.html",'<div class="progress amber" style="margin: 0" data-ng-show="vehicleDetail.loading"> <div class="indeterminate amber lighten-4"></div> </div> <div class="row" style="margin-bottom: 0"> <div class="container"> <div data-ng-if="vehicleDetail.error"> <h2>There has been an error :(</h2> <p>{{ vehicleDetail.error.message }}</p> <p data-ng-if="vehicleDetail.error.exception">{{ vehicleDetail.error.exception }}</p> <pre>{{ vehicleDetail.error | json}}</pre> </div> <div data-ng-repeat="vehicle in vehicleDetail.vehicles"> <div data-amv-vehicle-detail data-vehicle="vehicle"></div> </div> </div> </div> '),e.put("views/partials/footer.html",'<footer class="page-footer bgcolor-brand"> <div class="container"> <div class="row"> <div class="col l6 s12"> <h5 class="white-text">amv System Demo</h5> <p class="grey-text text-lighten-4"> </p> <ul> <li><a class="white-text" data-ui-sref="canparams">CAN Params</a></li> <li><a class="white-text" data-ui-sref="stateparams">STATE Params</a></li> </ul> </div> <div class="col l6 s12"> <ul> <li><a class="white-text" data-ui-sref="about">About</a></li> <li><a class="white-text" href="https://www.amv-networks.com/en/data-protection/">Privacy</a></li> <li><a class="white-text" href="https://www.amv-networks.com/en/imprint/">Impress</a></li> <li><a class="white-text" href="https://www.amv-networks.com/en/gtc/">Terms and Conditions</a></li> </ul> </div> </div> </div> <div class="footer-copyright"> <div class="container"> <p class="left"> made with <i class="material-icons tiny">favorite</i> by <a class="brown-text" href="https://www.amv-networks.com">amv</a> </p> </div> </div> </footer> '),e.put("views/partials/top-navigation.html",'<nav class="nav-extended white" role="navigation" data-ng-controller="TopNavigationController as topnavigation"> <div class="nav-wrapper container" data-init-sidenav-toggle-button="button-collapse"> <a id="logo-container" href="#/" class="brand-logo"> <span class="amv">amv</span> System Demo <small class="hide-on-med-and-down" style="font-size: 50%"> {{topnavigation.gitinfo.local.branch.name}}-{{topnavigation.gitinfo.local.branch.shortSHA}} </small> </a> <ul class="right hide-on-med-and-down"> <li ui-sref-active="active"><a data-ui-sref="home">Home</a></li> <li ui-sref-active="active"><a data-ui-sref="settings">Settings</a></li> <li ui-sref-active="active"><a data-ui-sref="about">About</a></li> </ul> <ul id="nav-mobile" class="side-nav"> <li ui-sref-active="active"><a data-ui-sref="home">Home</a></li> <li ui-sref-active="active"><a data-ui-sref="settings">Settings</a></li> <li ui-sref-active="active"><a data-ui-sref="about">About</a></li> </ul> <a href="#" data-activates="nav-mobile" class="button-collapse"><i class="material-icons">menu</i></a> </div> \x3c!--div class="nav-content container">\r\n    <ul class="tabs">\r\n      <li class="tab"><a href="#test1">Test 1</a></li>\r\n      <li class="tab"><a class="active" href="#test2">Test 2</a></li>\r\n      <li class="tab disabled"><a href="#test3">Disabled Tab</a></li>\r\n      <li class="tab"><a href="#test4">Test 4</a></li>\r\n    </ul>\r\n  </div--\x3e </nav> ')}]);